{"version":3,"sources":["webpack:///../docz/index.mdx"],"names":["_frontmatter","name","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Table","Column","ColumnGroup","RowContext","id","rowId","data","firstName","lastName","role","header","orderValue","row","cell","Fragment","onExpand","toUpperCase","Button","React","useContext","expanded","toggleExpanded","onClick","isMDXComponent"],"mappings":"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","file":"component---docz-index-mdx-c05aa77b49f2c9230434.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/davidadams/code/c2-table/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { Table, Column, ColumnGroup, RowContext } from '../src';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Button = makeShortcode(\"Button\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"c2-table\"\n    }}>{`c2-table`}</h1>\n    <h2 {...{\n      \"id\": \"install\"\n    }}>{`Install`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`#for yarn\nyarn add @clearc2/c2-table\n\n# for npm\nnpm install @clearc2/c2-table\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={0} __code={'() => {\\n  // import {Table, Column} from \\'@clearc2/c2-table\\'\\n  const data = [\\n    { id: 1, firstName: \\'Mickey\\', lastName: \\'Patton\\', role: \\'President\\' },\\n    { id: 2, firstName: \\'Kevin\\', lastName: \\'Bull\\', role: \\'Developer\\' },\\n  ]\\n  return (\\n    <Table id=\\\"test-table\\\" rowId=\\\"id\\\" data={data}>\\n      <Column id=\\\"id\\\" header=\\\"ID\\\" />\\n      <Column\\n        id=\\\"name\\\"\\n        header=\\\"Name\\\"\\n        orderValue={row => row.lastName + \\', \\' + row.firstName}\\n        cell={row => (\\n          <React.Fragment>\\n            {row.firstName} {row.lastName}\\n          </React.Fragment>\\n        )}\\n      />\\n      <Column id=\\\"role\\\" header=\\\"Role\\\" />\\n    </Table>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Table,\n      Column,\n      ColumnGroup,\n      RowContext\n    }} mdxType=\"Playground\">\n    {() => {\n        // import {Table, Column} from '@clearc2/c2-table'\n        const data = [{\n          id: 1,\n          firstName: 'Mickey',\n          lastName: 'Patton',\n          role: 'President'\n        }, {\n          id: 2,\n          firstName: 'Kevin',\n          lastName: 'Bull',\n          role: 'Developer'\n        }];\n        return <Table id='test-table' rowId='id' data={data} mdxType=\"Table\">\n            <Column id='id' header='ID' mdxType=\"Column\" />\n            <Column id='name' header='Name' orderValue={row => row.lastName + ', ' + row.firstName} cell={row => <React.Fragment>\n                {row.firstName} {row.lastName}\n              </React.Fragment>} mdxType=\"Column\" />\n            <Column id='role' header='Role' mdxType=\"Column\" />\n          </Table>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"column-groups\"\n    }}>{`Column Groups`}</h2>\n    <Playground __position={1} __code={'() => {\\n  // import {Table, Column} from \\'@clearc2/c2-table\\'\\n  const data = [\\n    { id: 1, firstName: \\'Mickey\\', lastName: \\'Patton\\', role: \\'President\\' },\\n    { id: 2, firstName: \\'Kevin\\', lastName: \\'Bull\\', role: \\'Developer\\' },\\n  ]\\n  return (\\n    <Table id=\\\"test-table\\\" rowId=\\\"id\\\" data={data}>\\n      <Column id=\\\"id\\\" header=\\\"ID\\\" />\\n      <ColumnGroup id=\\\"name\\\" header=\\\"Name\\\">\\n        <Column id=\\\"firstName\\\" header=\\\"First\\\" />\\n        <Column id=\\\"lastName\\\" header=\\\"Last\\\" />\\n      </ColumnGroup>\\n      <Column id=\\\"role\\\" header=\\\"Role\\\" />\\n    </Table>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Table,\n      Column,\n      ColumnGroup,\n      RowContext\n    }} mdxType=\"Playground\">\n    {() => {\n        // import {Table, Column} from '@clearc2/c2-table'\n        const data = [{\n          id: 1,\n          firstName: 'Mickey',\n          lastName: 'Patton',\n          role: 'President'\n        }, {\n          id: 2,\n          firstName: 'Kevin',\n          lastName: 'Bull',\n          role: 'Developer'\n        }];\n        return <Table id='test-table' rowId='id' data={data} mdxType=\"Table\">\n            <Column id='id' header='ID' mdxType=\"Column\" />\n            <ColumnGroup id='name' header='Name' mdxType=\"ColumnGroup\">\n                <Column id='firstName' header='First' mdxType=\"Column\" />\n                <Column id='lastName' header='Last' mdxType=\"Column\" />\n            </ColumnGroup>\n            <Column id='role' header='Role' mdxType=\"Column\" />\n          </Table>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"expandable-rows\"\n    }}>{`Expandable rows`}</h2>\n    <Playground __position={2} __code={'() => {\\n  // import {Table, Column} from \\'@clearc2/c2-table\\'\\n  const data = [\\n    { id: 1, name: \\'Mickey Patton\\', role: \\'President\\' },\\n    { id: 2, name: \\'Kevin Bull\\', role: \\'Developer\\' },\\n  ]\\n  return (\\n    <Table\\n      id=\\\"test-table\\\"\\n      rowId=\\\"id\\\"\\n      data={data}\\n      onExpand={({ row }) => <span>{row.role.toUpperCase()}</span>}\\n    >\\n      <Column id=\\\"id\\\" header=\\\"ID\\\" />\\n      <Column id=\\\"name\\\" header=\\\"Name\\\" />\\n    </Table>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Table,\n      Column,\n      ColumnGroup,\n      RowContext\n    }} mdxType=\"Playground\">\n    {() => {\n        // import {Table, Column} from '@clearc2/c2-table'\n        const data = [{\n          id: 1,\n          name: 'Mickey Patton',\n          role: 'President'\n        }, {\n          id: 2,\n          name: 'Kevin Bull',\n          role: 'Developer'\n        }];\n        return <Table id='test-table' rowId='id' data={data} onExpand={({\n          row\n        }) => <span>{row.role.toUpperCase()}</span>} mdxType=\"Table\">\n            <Column id='id' header='ID' mdxType=\"Column\" />\n            <Column id='name' header='Name' mdxType=\"Column\" />\n          </Table>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"using-rowcontext\"\n    }}>{`Using RowContext`}</h2>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`RowContext`}</inlineCode>{` to access the following row attributes:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`row`}</inlineCode>{` (object)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`index`}</inlineCode>{` (number)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`rowId`}</inlineCode>{` (string)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`expanded`}</inlineCode>{` (boolean)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`expand`}</inlineCode>{` (function)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`collapse`}</inlineCode>{` (function)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`toggleExpanded`}</inlineCode>{` (function)`}</li>\n    </ul>\n    <Playground __position={3} __code={'() => {\\n  // import {Table, Column, RowContext} from \\'@clearc2/c2-table\\'\\n  const Button = () => {\\n    const { expanded, toggleExpanded } = React.useContext(RowContext)\\n    return (\\n      <button onClick={toggleExpanded}>\\n        {expanded ? \\'Hide\\' : \\'Show\\'} Role\\n      </button>\\n    )\\n  }\\n  const data = [\\n    { id: 1, name: \\'Mickey Patton\\', role: \\'President\\' },\\n    { id: 2, name: \\'Kevin Bull\\', role: \\'Developer\\' },\\n  ]\\n  return (\\n    <Table\\n      id=\\\"test-table\\\"\\n      rowId=\\\"id\\\"\\n      data={data}\\n      onExpand={({ row }) => <span>{row.role.toUpperCase()}</span>}\\n    >\\n      <Column id=\\\"id\\\" header=\\\"ID\\\" />\\n      <Column id=\\\"name\\\" header=\\\"Name\\\" />\\n      <Column id=\\\"action\\\" header=\\\" \\\" cell={() => <Button />} />\\n    </Table>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Table,\n      Column,\n      ColumnGroup,\n      RowContext\n    }} mdxType=\"Playground\">\n    {() => {\n        // import {Table, Column, RowContext} from '@clearc2/c2-table'\n        const Button = () => {\n          const {\n            expanded,\n            toggleExpanded\n          } = React.useContext(RowContext);\n          return <button onClick={toggleExpanded}>\n              {expanded ? 'Hide' : 'Show'} Role\n            </button>;\n        };\n\n        const data = [{\n          id: 1,\n          name: 'Mickey Patton',\n          role: 'President'\n        }, {\n          id: 2,\n          name: 'Kevin Bull',\n          role: 'Developer'\n        }];\n        return <Table id='test-table' rowId='id' data={data} onExpand={({\n          row\n        }) => <span>{row.role.toUpperCase()}</span>} mdxType=\"Table\">\n            <Column id='id' header='ID' mdxType=\"Column\" />\n            <Column id='name' header='Name' mdxType=\"Column\" />\n            <Column id='action' header=' ' cell={() => <Button mdxType=\"Button\" />} mdxType=\"Column\" />\n          </Table>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}